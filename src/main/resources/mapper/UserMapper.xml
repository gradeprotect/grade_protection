<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.das.mapper.UserMapper">
    <resultMap id="baseUser" type="User">
        <id property="id" column="uid"/>
        <result property="name" column="uname"/>
        <result property="password" column="password"/>
        <result property="telephone" column="telephone"/>
        <result property="email" column="email"/>
        <result property="authority" column="authority"/>
        <association property="department" javaType="com.das.entity.Department">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="principal_name" column="principal_name"/>
            <result property="principal_telephone" column="principal_telephone"/>
            <result property="principal_email" column="principal_email"/>
            <result property="principal_title" column="principal_title"/>
            <result property="principal_office_telephone" column="principal_office_telephone"/>
        </association>
    </resultMap>
    <select id="login" parameterType="User" resultMap="baseUser">
        select u.id as uid,u.name as uname,u.password,u.telephone,u.email,u.authority,
         d.id,d.name,d.principal_name,d.principal_telephone,d.principal_email,d.principal_title,d.principal_office_telephone
          from user as u,department as d where u.id = #{id} and u.password = #{password} and u.department_id=d.id and u.isdelete = 0
    </select>
    <select id="getUserList" parameterType="Integer" resultMap="baseUser">
        select u.id as uid,u.name as uname,u.password,u.telephone,u.email,u.authority,
         d.id,d.name,d.principal_name,d.principal_telephone,d.principal_email,d.principal_title,d.principal_office_telephone
          from user as u,department as d where u.department_id=d.id and u.isdelete = 0 limit #{param1},#{param2}
    </select>
    <update id="updateUser" parameterType="com.das.entity.User" >
        update user set name = #{name},authority = #{authority},email = #{email},telephone=#{telephone},department_id=#{department.id,jdbcType=SMALLINT} where id = #{id}
    </update>
    <select id="getUserById" parameterType="Integer" resultMap="baseUser">
        select u.id as uid,u.name as uname,u.password,u.telephone,u.email,u.authority,
         d.id,d.name,d.principal_name,d.principal_telephone,d.principal_email,d.principal_title,d.principal_office_telephone
          from user as u,department as d
          where u.id = #{id} and u.department_id=d.id
    </select>
    <update id="updateUserPassword">
        update user set password = #{param1} where id = #{param2}
    </update>
    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into user(name,password,telephone,email,authority,department_id)
        values (#{name},#{password},#{telephone},#{email},#{authority},#{department.id,jdbcType=SMALLINT})
    </insert>
    <select id="getAllUserCount" resultType="Integer">
        select count(*) from user where isdelete is false
    </select>
    <select id="getUserByName" resultMap="baseUser">
        select u.id as uid,u.name as uname,u.password,u.telephone,u.email,u.authority,
         d.id,d.name,d.principal_name,d.principal_telephone,d.principal_email,d.principal_title,d.principal_office_telephone
          from user u,department d where u.name like concat('%',#{param1},'%') and u.isdelete is false and u.department_id = d.id limit #{param2},#{param3}
    </select>
    <select id="getUserByNameCount" resultType="Integer">
        select count(*) from user where name like concat('%',#{param1},'%') and isdelete is false
    </select>
    <update id="deleteUserById" parameterType="int">
        UPDATE user set isdelete=TRUE WHERE id=#{id} AND isdelete=FALSE;
    </update>
</mapper>